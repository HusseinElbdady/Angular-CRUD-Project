{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/api-serving/api-serving.component.css","webpack:///./src/app/api-serving/api-serving.component.html","webpack:///./src/app/api-serving/api-serving.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/global.service.ts","webpack:///./src/app/hussein/hussein.component.css","webpack:///./src/app/hussein/hussein.component.html","webpack:///./src/app/hussein/hussein.component.ts","webpack:///./src/app/input-form.directive.ts","webpack:///./src/app/pips/title-dots.pipe.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".item\\n{\\n    height: 35%\\n}\\n\\n.text-color\\n{\\n    color: gray\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBpLXNlcnZpbmcvYXBpLXNlcnZpbmcuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7SUFFSSxXQUFXO0NBQ2Q7O0FBRUQ7O0lBRUksV0FBVztDQUNkIiwiZmlsZSI6InNyYy9hcHAvYXBpLXNlcnZpbmcvYXBpLXNlcnZpbmcuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5pdGVtXG57XG4gICAgaGVpZ2h0OiAzNSVcbn1cblxuLnRleHQtY29sb3JcbntcbiAgICBjb2xvcjogZ3JheVxufSJdfQ== */\"","module.exports = \"<div class=\\\"text-center container my-5\\\">\\n\\n<input type=\\\"text\\\" class=\\\"form-control mb-4\\\" #title placeholder=\\\"Article Title\\\" >\\n\\n<textarea class=\\\"form-control mb-4\\\" #body placeholder=\\\"Article Body\\\" > </textarea>\\n\\n<Button class=\\\"btn btn-primary mr-3\\\" (click) = \\\"creatPost(title.value , body.value)\\\"> Insert Article</Button>\\n\\n</div>\\n\\n\\n\\n<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-3\\\" *ngFor=\\\"let post of posts\\\">\\n      <div class=\\\"item py-3 text-center\\\" > \\n        <img src=\\\"https://via.placeholder.com/250X150.jpg\\\">\\n        <h4 class=\\\"text-primary\\\">{{post.title |titleDots:15 }}</h4>\\n        <p class=\\\"text-color\\\">{{post.body |titleDots:95}}</p>\\n        <Button class=\\\"btn btn-primary mr-3\\\" (click) = \\\"updatePost(post,title.value , body.value )\\\">\\n            Update\\n          </Button>\\n      \\n          <Button class=\\\"btn btn-primary mr-3\\\" (click) = \\\"deletePost(post)\\\">\\n            Delete\\n          </Button>\\n      </div>\\n\\n    </div>\\n\\n  </div>\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport {GlobalService} from '../global.service';\n\n@Component({\n  selector: 'app-api-serving',\n  templateUrl: './api-serving.component.html',\n  styleUrls: ['./api-serving.component.css']\n})\nexport class ApiServingComponent implements OnInit {\n\n  constructor(private _GlobalService: GlobalService) { }\n\n  posts: any = [];\n  urli = 'https://jsonplaceholder.typicode.com/posts';\n  ngOnInit(): void {\n\n    this._GlobalService.getPosts().subscribe(Response => {\n      this.posts = Response;\n    } );\n  }\n\n  creatPost( inp: any , bodyInput: any ) {\n    const post = {title: inp , body : bodyInput};\n    this._GlobalService.creatP(post).subscribe(res => {\n      this.posts.splice(0, 0, post);\n    });\n  }\n\n  updatePost( post , inputTitle  , bodyInput) {\n    if ( inputTitle && bodyInput) {\n      const updatPost = {title: inputTitle , body: bodyInput , id: post.id};\n      const postIid: number = post.id;\n      console.log(updatPost);\n\n      this._GlobalService.updateP( postIid, updatPost).subscribe(response => {\n        const index = this.posts.indexOf(post);\n        this.posts[index] = updatPost;\n      });\n    }\n  }\n\n  deletePost( post) {\n    const deletPost = {id : post.id};\n\n    this._GlobalService.deleteP(post.id).subscribe(res => {\n      const indx = this.posts.indexOf(post);\n      this.posts.splice(indx , 1);\n      console.log(indx);\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-hussein></app-hussein>\\n\\n<app-api-serving></app-api-serving>\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'magazine';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {HttpClientModule} from '@angular/common/http';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HusseinComponent } from './hussein/hussein.component';\nimport { TitleDotsPipe } from './pips/title-dots.pipe';\nimport { InputFormDirective } from './input-form.directive';\nimport { ApiServingComponent } from './api-serving/api-serving.component';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HusseinComponent,\n    TitleDotsPipe,\n    InputFormDirective,\n    ApiServingComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GlobalService {\n\n  posts: any = [];\n  urli = 'https://jsonplaceholder.typicode.com/posts';\n\n  constructor(private _HttpClient: HttpClient) { }\n\n  getPosts() {\n    return this._HttpClient.get(this.urli);\n  }\n\n  creatP(post) {\n    return this._HttpClient.post(this.urli, JSON.stringify(post));\n  }\n\n\n  updateP( postIid , updatPost) {\n      return this._HttpClient.put(this.urli + '/' + postIid, updatPost);\n      }\n\n  deleteP(post) {\n\n    return this._HttpClient.delete(this.urli + '/' + post.id);\n  }\n\n}\n","module.exports = \".form-control.ng-invalid.ng-touched\\n{\\n    border: 1px solid red;\\n    \\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaHVzc2Vpbi9odXNzZWluLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0lBRUksc0JBQXNCOztDQUV6QiIsImZpbGUiOiJzcmMvYXBwL2h1c3NlaW4vaHVzc2Vpbi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmZvcm0tY29udHJvbC5uZy1pbnZhbGlkLm5nLXRvdWNoZWRcbntcbiAgICBib3JkZXI6IDFweCBzb2xpZCByZWQ7XG4gICAgXG59Il19 */\"","module.exports = \"<div class=\\\"container pt-5\\\">\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n  \\n<!--\\n  <form [formGroup]=\\\"from\\\" #hussein =\\\"ngForm\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"exampleInputEmail1\\\">Email address</label>\\n      <input type=\\\"email\\\" class=\\\"form-control\\\" formControlName = \\\"email\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"exampleInputPassword1\\\">Password</label>\\n      <input type=\\\"password\\\" class=\\\"form-control\\\" formControlName=\\\"password\\\">\\n    </div>\\n    <button [disabled]=\\\"hussein.invalid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n  </form>\\n  \\n  \\n------------------------------------------------------------------------------------------------------------\\n  <ul class=\\\"nav nav-pills\\\">\\n\\n    <li class=\\\"nav-item\\\" [class.active]=\\\"defView =='Courses'\\\">\\n      <a class=\\\"nav-link active\\\" href=\\\"#\\\" (click)=\\\"setView('Courses')\\\">Courses</a>\\n    </li>\\n  \\n    <li class=\\\"nav-item\\\" [class.active]=\\\"defView == 'Certifications'\\\">\\n      <a class=\\\"nav-link\\\" href=\\\"#\\\" (click)=\\\"setView('Certifications')\\\">Certifications</a>\\n    </li>\\n  </ul>\\n  \\n  <div [ngSwitch]=\\\"defView\\\">\\n    <div *ngSwitchCase=\\\"'Courses'\\\">List Of Courses</div>\\n    <div *ngSwitchCase=\\\"'Certifications'\\\">List Of Certifications</div>\\n  </div>\\n  <br>\\n  <input type=\\\"text\\\" appInputForm [format]=\\\"'lowerCase'\\\">\\n  \\n  ---------------------------------------------------------------------------------------------------------------\\n  <br><br><br><br><br><br>\\n  <form #f=\\\"ngForm\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"exampleInputEmail1\\\">Email address</label>\\n  \\n      <input type=\\\"email\\\" name=\\\"mail\\\" ngModel #mail='ngModel' class=\\\"form-control\\\" id=\\\"exampleInputEmail1\\\"\\n        aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Enter email\\\" required minlength=\\\"20\\\" pattern=\\\"husseinabdelaziz8@gmail.com\\\" (change)=\\\"dataChang(mail)\\\">\\n  \\n      <div *ngIf=\\\"mail.touched && mail.invalid\\\" class=\\\" alert alert-danger\\\" >\\n        <div *ngIf=\\\"mail.errors.required\\\"> Please Enter your Email address</div>\\n        <div *ngIf=\\\"mail.errors.minlength\\\" class=\\\" alert alert-danger\\\"> Minimum Lengh is {{mail.errors.minlength.requiredLength}}</div>\\n        <div *ngIf=\\\"mail.errors.pattern\\\"> Please Enter your valid pattern</div>\\n      </div>\\n    \\n    </div>\\n    \\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"exampleInputPassword1\\\">Password</label>\\n      <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"exampleInputPassword1\\\" placeholder=\\\"Password\\\">\\n    </div>\\n    <div class=\\\"form-group form-check\\\">\\n      <input type=\\\"checkbox\\\" class=\\\"form-check-input\\\" id=\\\"exampleCheck1\\\">\\n      <label class=\\\"form-check-label\\\" for=\\\"exampleCheck1\\\">Check me out</label>\\n    </div>\\n    <button [disabled]=\\\"f.invalid\\\"  type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n  </form>\\n-->\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-hussein',\n  templateUrl: './hussein.component.html',\n  styleUrls: ['./hussein.component.css']\n})\nexport class HusseinComponent implements OnInit {\n\n\n  constructor() { }\n\n\n\n\n\n\n  /*\nfrom = new FormGroup({\n    email : new FormControl('', Validators.required),\n    password : new FormControl()\n  });\n------------------------------------------------------\n\n\n\n  defView = 'Courses';\n\n  setView(selectedView: string) {\n    this.defView = selectedView;\n  }\n  dataChang(mail: any) {\n    console.log(mail);\n  }\n*/\n  ngOnInit() {\n  }\n\n}\n","import { Directive, HostListener, ElementRef, Input } from '@angular/core';\nimport { Element } from '@angular/compiler';\n\n@Directive({\n  selector: '[appInputForm]'\n})\nexport class InputFormDirective {\n\n// tslint:disable-next-line: no-input-rename\n  @Input('format') format: any;\n\n  constructor( private ref: ElementRef) { }\n  @HostListener ('focus')\n  onfocus() {\n    console.log('focus');\n  }\n  @HostListener('blur')\n  onblur() {\n// tslint:disable-next-line: prefer-const\n    let getValue: string = this.ref.nativeElement.value;\n    if (this.format === 'upperCase') {\n      this.ref.nativeElement.value = getValue.toUpperCase();\n    } else {\n      this.ref.nativeElement.value = getValue.toLowerCase();\n    }\n\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'titleDots'\n})\nexport class TitleDotsPipe implements PipeTransform {\n\n  transform(value: any, count?: number): any {\n\n    return value.substr(0, count) + '...' ;\n\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}